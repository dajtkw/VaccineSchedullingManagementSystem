@using Microsoft.AspNetCore.Identity
@using QuanLyTiemChung.Web.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Hệ Thống Tiêm Chủng</title>

    @if (SignInManager.IsSignedIn(User))
    {
        <meta name="current-user-id" content="@UserManager.GetUserId(User)" />
    }

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    <style>
        .notification-item-dropdown {
            white-space: normal;
            /* Cho phép text xuống dòng */
            cursor: pointer;
        }

        .notification-item-dropdown.unread {
            font-weight: bold;
            background-color: #f0f2f5;
        }

        #notification-list {
            max-height: 400px;
            overflow-y: auto;
            min-width: 300px;
            /* Đảm bảo dropdown đủ rộng */
        }
    </style>

</head>

<body class="d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-syringe me-2"></i>Hệ Thống Tiêm Chủng
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent"
                    aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            if (User.IsInRole("Admin"))
                            {
                                <li class="nav-item"><a class="nav-link" asp-controller="Admin" asp-action="Index">Dashboard</a>
                                </li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Admin" asp-action="ManageUsers">Người
                                        dùng</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Admin"
                                        asp-action="ManageVaccines">Vắc-xin</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Admin" asp-action="ManageSites">Địa
                                        điểm</a></li>
                            }
                            else if (User.IsInRole("HealthOfficial"))
                            {
                                <li class="nav-item"><a class="nav-link" asp-controller="MedicalStaff" asp-action="Index">Quản
                                        lý Lịch hẹn</a></li>
                            }
                            else // Mặc định là người dân (Citizen)
                            {
                                <li class="nav-item"><a class="nav-link" asp-controller="Appointment" asp-action="Index">Lịch sử
                                        tiêm</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Appointment" asp-action="Create">Đăng
                                        ký tiêm</a></li>
                                <li class="nav-item"><a class="nav-link" asp-controller="Notification" asp-action="Index">Thông
                                        báo</a></li>
                            }
                        }
                    </ul>

                    <ul class="navbar-nav">
                        @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Citizen") ||
                                                User.IsInRole("HealthOfficial")))
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link text-light" href="#" id="notification-bell" role="button"
                                    data-bs-toggle="dropdown" aria-expanded="false" title="Xem thông báo">
                                    <i class="fas fa-bell"></i>
                                    <span class="badge rounded-pill bg-danger" id="notification-count"
                                        style="position: relative; top: -10px; left: -5px; display: none;"></span>
                                </a>
                                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="notification-bell">
                                    <div id="notification-list">
                                    </div>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item text-center small" id="mark-all-as-read" href="#">Đánh dấu tất
                                        cả đã đọc</a>
                                    <a class="dropdown-item text-center small"
                                        href="@Url.Action("Index", "Notification")">Xem tất cả thông báo</a>
                                </div>
                            </li>
                        }
                        <partial name="_LoginPartial" />
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container mt-4 flex-grow-1">
        <main role="main" class="pb-3">
            <partial name="_StatusMessage" />
            @RenderBody()
        </main>
    </div>

    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
        <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i class="fas fa-bell me-2 text-primary"></i>
                <strong class="me-auto">Thông Báo Mới</strong>
                <small>Bây giờ</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body" id="notificationToastBody">
            </div>
        </div>
    </div>

    <footer class="footer border-top text-muted bg-light py-3 mt-auto">
        <div class="container text-center">
            &copy; @DateTime.Now.Year - Hệ Thống Quản Lý Tiêm Chủng
        </div>
    </footer>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @if (SignInManager.IsSignedIn(User))
    {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
        <script>
            $(document).ready(function () {
                // **Phần xử lý Role Change giữ nguyên**
                const roleChangeConnection = new signalR.HubConnectionBuilder()
                    .withUrl("/adminHub")
                    .build();

                // 2. Lắng nghe sự kiện "RoleChanged" từ server
                roleChangeConnection.on("RoleChanged", function (data) {
                    // Hiển thị hộp thoại thông báo
                    showRoleChangeNotification(data);

                    // Tự động đăng xuất sau 5 giây
                    setTimeout(() => {
                        logout();
                    }, 5000);
                });

                // 3. Bắt đầu kết nối đến AdminHub
                roleChangeConnection.start().catch(err => console.error("RoleChange Hub Connection Error: " + err.toString()));

                // 4. Hàm hiển thị hộp thoại (modal) thông báo thay đổi quyền
                function showRoleChangeNotification(data) {
                    const modalHtml = `
                    <div class="modal fade" id="roleChangedModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content border-warning">
                                <div class="modal-header bg-warning text-dark">
                                    <h5 class="modal-title"><i class="fas fa-exclamation-triangle me-2"></i>Quyền Truy Cập Đã Thay Đổi</h5>
                                </div>
                                <div class="modal-body text-center">
                                    <p class="lead">${data.message}</p>
                                    <div class="alert alert-info">
                                        Quyền cũ: <span class="badge bg-secondary">${data.oldRole}</span><br>
                                        Quyền mới: <span class="badge bg-primary">${data.newRole}</span>
                                    </div>
                                    <p>Bạn sẽ được đăng xuất sau: <strong id="countdown">5</strong> giây</p>
                                </div>
                                <div class="modal-footer justify-content-center">
                                    <button type="button" class="btn btn-warning" onclick="logout()">
                                        <i class="fas fa-sign-out-alt me-2"></i>Đăng Xuất Ngay
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>`;

                    $('body').append(modalHtml);
                    const modal = new bootstrap.Modal(document.getElementById('roleChangedModal'));
                    modal.show();

                    let countdown = 5;
                    const timer = setInterval(() => {
                        countdown--;
                        $('#countdown').text(countdown);
                        if (countdown <= 0) {
                            clearInterval(timer);
                        }
                    }, 1000);
                }

                // 5. Hàm đăng xuất an toàn bằng phương thức POST
                function logout() {
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = '/Account/Logout';

                    // Thêm AntiForgeryToken vào form để gửi đi
                    const tokenInput = $('input[name="__RequestVerificationToken"]');
                    if (tokenInput.length > 0) {
                        form.appendChild(tokenInput[0].cloneNode());
                    }

                    document.body.appendChild(form);
                    form.submit();
                }

                // **🔥 CẬP NHẬT LOGIC SIGNALR VÀ GIAO DIỆN THÔNG BÁO CHO CITIZEN**
                @if (User.IsInRole("Citizen") || User.IsInRole("HealthOfficial"))
                    {
                        <text>
                            const notificationConnection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();
                            const badge = $('#notification-count');
                            const notificationList = $('#notification-list');
                            const toastElement = $('#notificationToast');
                            const toastBody = $('#notificationToastBody');
                            const toast = new bootstrap.Toast(toastElement);

                            // Cập nhật số lượng trên badge
                            function updateBadge() {
                                $.getJSON("@Url.Action("GetUnreadCount", "Notification")", function (data) {
                                    if (data.count > 0) {
                                        badge.text(data.count).show();
                                    } else {
                                        badge.hide();
                                    }
                                });
                                            }

                            // Tải và hiển thị 5 thông báo mới nhất trong dropdown
                            function loadNotifications() {
                                $.getJSON("@Url.Action("GetNotifications", "Notification")", function (notifications) {
                                    notificationList.empty(); // Xóa danh sách cũ
                                    if (notifications && notifications.length > 0) {
                                        $.each(notifications.slice(0, 5), function (i, n) {
                                            const itemClass = n.isRead ? "" : "unread";
                                            const item = $(`
                                                                <a class="dropdown-item notification-item-dropdown ${itemClass}" href="${n.url || '#'}" data-id="${n.id}">
                                                                    <div class="small">${n.message}</div>
                                                                    <div class="text-muted small">${new Date(n.createdAt).toLocaleString('vi-VN')}</div>
                                                                </a>
                                                            `);
                                            notificationList.append(item);
                                        });
                                    } else {
                                        notificationList.append('<span class="dropdown-item text-muted">Không có thông báo mới.</span>');
                                    }
                                });
                                            }

                            // Lắng nghe thông báo mới từ server
                            notificationConnection.on("ReceiveNotification", function (message, createdAt) {
                                toastBody.html(`Bạn có thông báo mới. <a href="/Notification" class="text-decoration-underline">Nhấn vào đây để xem.</a>`);
                            toast.show();
                            updateBadge();
                            loadNotifications(); // Tải lại danh sách trong dropdown
                                            });

                            // Bắt đầu kết nối và cập nhật badge
                            notificationConnection.start().then(function() {
                                updateBadge();
                            loadNotifications();
                                            }).catch(err => console.error(err.toString()));

                            // Sự kiện khi click vào chuông
                            $('#notification-bell').on('click', function() {
                                loadNotifications();
                                            });

                            // Sự kiện khi click vào một thông báo trong dropdown
                            notificationList.on('click', '.notification-item-dropdown', function (e) {
                                e.preventDefault();
                            const item = $(this);
                            const id = item.data('id');
                            const url = item.attr('href');

                            // Gửi request POST để đánh dấu đã đọc
                            $.post("@Url.Action("MarkAsRead", "Notification")/" + id, function() {
                                window.location.href = url; // Chuyển hướng sau khi đánh dấu
                                                });
                                            });

                            // Sự kiện khi click "Đánh dấu tất cả đã đọc"
                            $('#mark-all-as-read').on('click', function(e) {
                                e.preventDefault();
                            $.post("@Url.Action("MarkAllAsRead", "Notification")", function() {
                                updateBadge();
                            loadNotifications();
                                                });
                                            });
                        </text>
                }

                            // **Phần code xử lý Role Change của bạn giữ nguyên ở đây**
                            // ... (code cho roleConnection, showRoleChangeNotification, logout, v.v...) ...
                        });
        </script>
    }

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>