@model IEnumerable<QuanLyTiemChung.Web.ViewModels.AppointmentViewModel>
@{
    ViewData["Title"] = "Quản Lý Lịch Hẹn";
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">@ViewData["Title"]</h2>
        <a asp-action="Create" class="btn btn-primary shadow-sm">
            <i class="fas fa-plus-circle me-2"></i>Đăng Ký Lịch Tiêm Mới
        </a>
    </div>

    <div class="card shadow-sm">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs" id="appointment-tabs">
                <li class="nav-item">
                    <a class="nav-link active" href="#" data-status="upcoming">Lịch hẹn sắp tới</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-status="history">Lịch sử tiêm chủng</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#" data-status="all">Tất cả</a>
                </li>
            </ul>
        </div>
        <div class="card-body">
            <div id="appointment-list-container">
                @* Nội dung ban đầu sẽ được tải vào đây *@
            </div>
        </div>
    </div>
</div>

@* Thêm AntiForgeryToken để các AJAX POST (như Hủy lịch) có thể sử dụng *@
<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.5/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            const container = $('#appointment-list-container');
            let currentStatus = 'upcoming'; // Tab mặc định

            // ======================================================
            // LOGIC XỬ LÝ GIAO DIỆN VÀ TAB
            // ======================================================

            function loadAppointments(status) {
                currentStatus = status;
                container.html('<div class="text-center p-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Đang tải...</span></div></div>');
                
                $.get(`/Appointment/GetAppointmentsByStatus?status=${status}`)
                    .done(function (data) {
                        container.html(data);
                    })
                    .fail(function () {
                        container.html('<div class="alert alert-danger">Không thể tải dữ liệu. Vui lòng thử lại.</div>');
                    });
            }

            $('#appointment-tabs .nav-link').on('click', function(e) {
                e.preventDefault();
                $('#appointment-tabs .nav-link').removeClass('active');
                $(this).addClass('active');
                const status = $(this).data('status');
                loadAppointments(status);
            });
            
            // Tải tab mặc định khi trang được mở
            loadAppointments('upcoming');

            // Xử lý nút hủy lịch
            $(document).on('click', '.btn-cancel-appointment', function() {
                const btn = $(this);
                const appointmentId = btn.data('appointment-id');
                
                if (confirm('Bạn có chắc chắn muốn hủy lịch hẹn này không?')) {
                    const token = $('#antiForgeryForm input[name="__RequestVerificationToken"]').val();
                    btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');

                    $.post('/Appointment/CancelAppointment', { id: appointmentId, __RequestVerificationToken: token })
                        .done(function(response) {
                            if(response.success) {
                                alert(response.message);
                                loadAppointments(currentStatus); // Tải lại tab hiện tại
                            } else {
                                alert('Lỗi: ' + response.message);
                                btn.prop('disabled', false).html('<i class="fas fa-times"></i> Hủy');
                            }
                        })
                        .fail(function() {
                            alert('Đã xảy ra lỗi kết nối. Vui lòng thử lại.');
                            btn.prop('disabled', false).html('<i class="fas fa-times"></i> Hủy');
                        });
                }
            });

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub") // Đảm bảo URL này chính xác
                .build();

            connection.on("UpdateAppointmentStatus", function (appointmentId, newStatus, statusBadgeClass) {
                loadAppointments(currentStatus);
                
            });

            // Bắt đầu kết nối
            connection.start().catch(err => console.error("SignalR Connection Error: ", err.toString()));
        });
    </script>
}